元类
1.***类也是对象***
在大多数编程语言中,类就是一组用来描述如何生成一个对象的代码段在 Python中这一点仍然成立
 > class ObjectCreator(object):
 	pass
 >> my_object = ObjectCreator()
 >> print(my_object)
 cmain. ObjectCreator object at 0x8974f2c>
但是,Python中的类还远不止如此类同样也是一种对象是的,没错,就是对象只要你使用关键字
 class Python解释器在执行的时候就会创建一个对象
下面的代码段:
 >> class ObjectCreator(object)
 pass
将在内存中创建一个对象,名字就是 ObjectCreator这个对象(类对象ObjectCreator)拥有创建对象(实
例对象)的能力但是,它的本质仍然是一个对象,于是乎你可以对它做如下的操作
1.你可以将它赋值给一个变量
2.你可以拷贝它
3.你可以为它增加属性
4.你可以将它作为函数参数进行传递



类创建了实例对象，而元类创建了类


元类就是python里的造物主



6.到底什么是元类(终于到主题了)
元类就是用来创建类的“东西·你创建类就是为了创建类的实例对象,不是吗?但是我们已经学习到了
 Python中的类也是对象
元类就是用来创建这些类(对象),元类就是类的类你可以这样理解为:
MyClass = Metaclass()  # 使用元类创建出一个对象,这个对象称为“类”
my_object= MyClass()  # 使用“类”来创建出实例对象
你已经看到了type可以让你像这样做:
Myclass = type(''Myclass'', (), {})
这是因为函数type实际上是一个元类。type就 Python是在背后用来创建所有类的元类·现在你想知道那为
什么type会全部采用小写形式而不是Type呢?好吧,我猜这是为了和str保持一致性,str是用来创建字符串
对象的类,而int是用来创建整数对象的类type就是创建类对象的类你可以通过检查__class__属性来看
到这一点·Python中所有的东西,注意我是指所有的东西都是对象这包括整数、字符串、函数以
及类它们全部都是对象,而且它们都是从一个类创建而来,这个类就是type。



就是这样,除此之外,关于元类真的没有别的可说的了。但就元类本身而言,它们其实是很简单的:
1.拦截类的创建
2.修改类
3.返回修改之后的类

究竟为什么要使用元类?
现在回到我们的大主题上来,究竟是为什么你会去使用这样一种容易出错且晦涩的特性?好吧,一般来
说,你根本就用不上它:
“元类就是深度的魔法,99%的用户应该根本不必为此操心。如果你想搞清楚究竟是否需要用到元类,那
么你就不需要它。那些实际用到元类的人都非常清楚地知道他们需要做什么而且根本不需要解释为什么
要用元类。”—Python界的领袖 Tim Peters



比如： class Foo(object, metaclass=upper_attr)):  # metaclass就是固定定义一个元类的意思，没有这个就会使用默认的type元类。
		bar = 'bip'





元类实现ORM
1.ORM是什么
Om是 python编程语言后端web框架 Django的核心思想,Object Relational Mapping"即对象关系映
射简称ORM·
一个句话理解就是:创建一个实例对象,用创建它的类名当做数据表名,用创建它的类属性对应数据表的
字段,当对这个实例对象操作时,能够对应 MySQL语句







