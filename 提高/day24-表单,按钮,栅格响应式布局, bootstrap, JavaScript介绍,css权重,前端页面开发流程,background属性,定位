定位
文档流
文档流,是指盒子按照html标签编写的顺序依次从上到下,从左到右排列块元素占一行,行内元素在一行
之内从左到右排列,先写的先排列,后写的排在后面,每个盒子都占据自己的位置。
关于定位
我们可以使用css的 position属性来设置元素的定位类型, postion的设置项如下
 relative生成相对定位元素,元素所占据的文档流的位置保留,元素本身相对自身原位置进行偏移。
 absolute生成绝对定位元素,元素脱离文档流,不占据文档流的位置,可以理解为漂浮在文档流的上
方,相对于上一个设置了定位的父级元素来进行定位,如果找不到,则相对于body元素进行定位。
 fixed生成固定定位元素,元素脱离文档流,不占据文档流的位置,可以理解为漂浮在文档流的上方,相
对于浏览器窗口进行定位。
 static默认值,没有定位,元素出现在正常的文档流中,相当于取消定位属性或者不设置定位属性。
 inherit从父元素继承 position属性的值。
定位元素的偏移
定位的元素还需要用left、 right、top或 bottom者来设置相对于参照元素的偏移值。



05——相对定位
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>定位</title>
	<style type="text/css">
		
		.con{
			width:400px;
			height:400px;
			border:1px solid #000;
			margin:50px auto 0;
		}

		.box01,.box02{
			width:300px;
			height:100px;
			margin:10px;
		}

		.box01{
			background-color:green;
			position:relative;
			left:50px;
			top:50px;
		}


		.box02{
			background-color:gold;
		}



	</style>
</head>
<body>
	<div class="con">
		<div class="box01"></div>
		<div class="box02"></div>
	</div>
</body>
</html>





08——定位元素的层级
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<style type="text/css">
		.con{
			width:400px;
			height:400px;
			border:1px solid #000;
			margin:50px auto 0;
			position:relative;
			
		}

		.con div{
			width:200px;
			height:200px;
			position:absolute;
		}

		.box01{
			background-color:green;
			left:20px;
			top:20px;
			z-index:10;
		}

		.box02{
			background-color:gold;
			left:40px;
			top:40px;
			z-index:11
		}

		.box03{
			background-color:pink;
			left:60px;
			top:60px;
			z-index:12
		}

		.box04{
			background-color:yellowgreen;
			left:80px;
			top:80px;
		}

	</style>
</head>
<body>
	<div class="con">
		<div class="box01"></div>
		<div class="box02"></div>
		<div class="box03"></div>
		<div class="box04"></div>
	</div>
</body>
</html>




10——定位实例
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<style type="text/css">
		
		.menu{
			height:80px;
			background-color:gold;
			position:fixed;
			width:960px;
			top:0px;
			left:50%;
			margin-left:-480px;
		}

		p{
			text-align:center;
		}

		.popup{
			width:500px;
			height:300px;
			border:1px solid #000;
			background-color:#fff;
			position:fixed;
			left:50%;
			margin-left:-251px;
			top:50%;
			margin-top:-151px;
			z-index:9999;
		}
		
		.popup h2{
			background-color:gold;
			margin:10px;
			height:40px;
		}

		.mask{
			position:fixed;
			width:100%;
			height:100%;
			background-color:#000;
			left:0;
			top:0;
			opacity:0.5;
			z-index:9998;
		}

		.pop_con{
			display:block;
		}



	</style>
</head>
<body>
	<div class="menu">菜单文字</div>
	
	<div class="pop_con">
		<div class="popup">
			<h2>弹框的标题</h2>	
		</div>
		<div class="mask"></div>
	</div>

	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
</body>
</html>




 background属性
属性解释
 background属性是Css中应用比较多,且比较重要的一个属性,它是负责给盒子设置背景图片和背景颜色
的, background是一个复合属性,它可以分解成如下几个设置项:
 background-color-设置背景颜色
 background-image-设置背景图片地址
 background-repeat-设置背景图片如何重复平铺
 background-position-设置背景图片的位置
 background-attachment-设置背景图片是固定还是随着页面滚动条滚动
实际应用中,我们可以用 background属性将上面所有的设置项放在一起,而且也建议这么做,这样做性能更
高,而且兼容性更好,比如:background:# urlbgimage. gif no-repeat- left center fixed这里面
的#00ffo0是设置background-color-ul(bgimagegi是设置background--imae;"no-repeat是设置
 background-repeat-"left center是设置 background-position-"fixed"是设置background-a-,各个
设置项用空格隔开,有的设置项不写也是可以的,它会使用默认值。



11——background属性
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>background属性</title>
	<style type="text/css">
		
		.box{
			width:400px;
			height:200px;
			border:5px solid #000;
			margin:50px auto 0;

			/* background-color:cyan;
			background-image:url(images/bg.jpg); */
			/* 
				repeat-x:只平铺x轴方向;
				repeat-y:只平铺y轴方向;
				no-repeat:只平铺一次;
				repeat：缺省值，平铺所有的；
			 */
			/* background-repeat:no-repeat; */
			/* 
			   水平方向：left  center  right
			   垂直方向：top   center  botton
			*/

			/* background-position:-20px 10px; */


			background:url(images/bg.jpg) -20px 10px no-repeat cyan;


		}


	</style>
</head>
<body>
	<div class="box">		
		
	</div>
</body>
</html>




02——网页背景固定
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<style type="text/css">
		
		body{
			background:url(images/0022.jpg) fixed;
			/* background-attachment:fixed; */
		}

		p{
			text-align:center;
			color:red;
		}


	</style>
</head>
<body>
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<p>网页文字</p>
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
	<br />
</body>
</html>



总结
在网页制作中,如何选择合适的图片格式呢?
1、使用大幅面图片时,如果要使用不透明背景的图片,就使用jpg图片;如果要使用透明或者半透明背景的
图片,就使用png图片
2、使用小幅面图片或者图标图片时,如果图片含多种颜色,可以使用gif或png图片如果图片是单色,而且
要求有很好的显示效果,可以使用svg如果是图片时动画的,可以使用gif



 photoshop批量切图技巧
切图,就是从效果图中把网页制作需要的小图片裁剪出来。
1、使用psd格式并且带有图层的图像切图
2、在图像上用切片工具切出需要的小图
3、双击切片,给切片命名
4、将需要制作透明背景图像的切片的背景隐藏
5、执行菜单命令存储为web所用格式
6、点选切片,设置切片的图片格式
7、存储切片,选择所有用户切片”,点存储(多个切片会自动存到所选文件夹中的 images文件夹中)



前端页面开发流程
1、创建页面项目目录
2、使用 Photoshop对效果图切图,切出网页制作中需要的小图片
3、将装饰类图像合并,制作成雪碧图
4、结合 Photoshop和代码编辑器,参照效果图,进行html和css代码书写,制作页面




css3 animation动画
1、@keyframes定义关键帧动画
2、 animation--name动画名称
3、 animation-duration-动画时间
4、 animation-timing-function--动画曲线 linear(匀速) ease(缓冲)steps步数)
5、 animation-delay-动画延迟
6、 animation-iteration-count--动画播放次数 ninfinite
7、 animation-direction-动画结束后是否反向还原 normallAlternate
8、 animation-state-play-动画状态 paused(停止 running运动)
9、 animation-fil-mode动画前后的状态none(缺省) forwards(结束时停留在最后一帧) backwards开始时停
留在定义的开始帧)both(前后都应用)
10、 animation name duration timingfunction- delay iteration-count- direction;同时设置多个属性





01——三维旋转
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>三维旋转</title>
	<style type="text/css">

		/* 	 
			旋转的轴向：

			x轴：从左往右

			y轴：从上往下

			z轴：从屏幕内往外

			判断旋转的方向：让轴向对着自己，顺时针方向


		*/
		
		.box{
			width:300px;
			height:300px;
			background-color:gold;
			border:3px solid #000;
			margin:50px auto 0;
			transform-style:preserve-3d;

			/* 做变形动画需要设置初始值，不设置容易出现跳变的bug */
			transform:perspective(800px) rotateY(0deg);
			transition:all 500ms ease;
		}

		.box:hover{
			transform:perspective(800px) rotateY(45deg);
		}


		.box2{
			width:300px;
			height:300px;
			background-color:gold;
			border:3px solid #000;
			margin:50px auto 0;
			transform-style:preserve-3d;

			/* 做变形动画需要设置初始值，不设置容易出现跳变的bug */
			transform:perspective(800px) rotateX(0deg);
			transition:all 500ms ease;
		}

		.box2:hover{
			transform:perspective(800px) rotateX(45deg);
		}




	</style>
</head>
<body>
	<div class="box"></div>

	<div class="box2"></div>
</body>
</html>




css权重
CSS权重指的是样式的优先级,有两条或多条样式作用于一个元素,权重高的那条样式对元素起作用权重相
同的,后写的样式会覆盖前面写的样式。
权重的等级
可以把样式的应用方式分为几个等级,按照等级来计算权重
1、 limportant,加在样式属性值后,权重值为10000
2、内联样式,如:style=,权重值为1000
3、D选择器,如:#content,权重值为100
4、类,伪类和属性选择器,如:content、hover权重值为10
、、
5、标签选择器和伪元素选择器,如:divp、before权重值为1
6、通用选择器(*)、子选择器(>)、相邻选择器(+)、同胞选择器()、权重值为0



移动端与PC端页面布局区别
视口
视口是移动设备上用来显示网页的区域,一般会比移动设备可视区域大,宽度可能是980px或者1024px,目
的是为了显示下整个为PC端设计的网页,这样带来的后果是移动端会出现横向滚动条,为了避免这种情况,
移动端会将视口缩放到移动端窗口的大小这样会让网页不容易观看,可以用meta标签,name=viewport
”来设置视口的大小,将视口的大小设置为和移动设备可视区一样的大小




 JavaScript介绍
 JavaScript是运行在浏览器端的脚步语言, JavaScript主要解决的是前端与用户交互的问题,包括使用交互与
数据交互。 JavaScript是浏览器解释执行的,前端脚本语言还有JScript(微软,E独有), ActionScript
 Adobe公司,需要插件等。
前端三大块
1、HTML:页面结构
2、CSS:页面表现:元素大小、颜色、位置、隐藏或显示、部分动画效果
3、 JavaScript:页面行为:部分动画效果、页面与用户的交互、页面功能




 JavaScript嵌入页面的方式
1、行间事件(主要用于事件)
 <input type="button"name="" onclick="alert('ok! ');"
2、页面script标签嵌入
 <script type="text/javascript">
 alert(ok!);
 </script>
3、外部引入
 <script type="text/javascript"src"js/index. js"></script>





07——js嵌入页面
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>

	<!-- 第三种嵌入js的方式：外链js   -->
	<script type="text/javascript" src="js/hello.js"></script>
	
	<!-- 第二种嵌入js的方式：内嵌js   -->
	<script type="text/javascript">		
		alert("hello world too!");
	</script>

</head>
<body>

	<!-- 第一种嵌入js的方式：行间事件   -->
	<input type="button" name="" value="点击" onclick="alert('hello world!')">
</body>
</html>




变量
 JavaScript是一种弱类型语言, javascript变量类型由它的值来决定。定义变量需要用关键字var
 var iNum=123;
 var sTr='asd';
//同时定义多个变量可以用,“隔开,公用一个var关键字
 var iNum 45, sTr='qwe', sCount='68';
>
变量类型
5种基本数据类型:
1、 number数字类型
2、 string字符串类型
3、 boolean布尔类型true或 false
4、 undefined undefined类型,变量声明未初始化,它的值就是 undefined
5、 null null类型,表示空对象,如果定义的变量将来准备保存对象,可以将变量初始化为nul在页面上获取
不到对象,返回的值就是nul





05——函数定义与执行
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script type="text/javascript">


		//函数的定义
		function fnMyalert()
		{
			alert('hello world!');	
		}
		//函数调用执行
		// fnMyalert();

		function fnChange(){
			var oDiv = document.getElementById('div1');
			oDiv.style.color = "red";
			oDiv.style.fontSize = "30px";
		}

	</script>
</head>
<body>
	<!-- 标签内调用   -->
	<div id="div1" onclick="fnMyalert()">这是一个div元素</div>
	<input type="button" name="" value="改变div" onclick="fnChange()">
</body>
</html>




ajax与 jsonp
ajax技术的目的是让 ajaxjavascripthttp, ajax发送http请,与后台通信,获取数据和信息。ajax技术的原理是实例化
 xmlhttp,  ajax javascript,对象,使用此对象与后台通信。ajax信的过程不会影响后续javascript的执行,从而实现异步。
同步和异步
现实生活中,同步指的是同时做几件事情,异步指的是做完一件事后再做另外一件事,程序中的同步和异步
是把现实生活中的概念对调,也就是程序中的异步指的是现实生活中的同步,程序中的同步指的是现实生活
中的异步。
局部刷新和无刷新
ajax可以实现局部刷新,也叫做无刷新,无刷新指的是整个页面不刷新,只是局部刷新,ajax可以自己发送
http请求,不用通过浏览器的地址栏,所以页面整体不会刷新 http, ajax获取到后台数据,更新页面显示数据的
部分,就做到了页面局部刷新。
同源策略
ajax请求的页面或资源只能是同一个域下面的资源,不能是其他域的资源,这是在设计ajax时基于安全的考
虑。特征报错提示:



本地存储
本地存储分为 cookie,以及新增的 localStorageses和
 1, cookie ,k , http,存储在本地,容量最大4k,在同源的http请求时携带传速损耗带宽,可设置访问路径,只有此
路径及此路径的子路径才能访问此 cookie,在设置的过期时间之前有效。





 bootstrap
简单、直观、强悍的前端开发框架,让we开发更迅速、简单。来自 Twitter,是目前很受欢迎的前端框架之
 Bootrstrap是基于hTMl、css、 JavaScript的,让书写代码更容易。移动优先,响应式布局开发。
 bootstrap: http: //www.bootcss. com/中文网址:http:www.bootcss.com/
 bootstrap容器
 container-fluid-流体
 container
1170
970
750
100%
<div class="container-fluid-">流体容器</div
<div class="container">响应式固定容器<div




05——bootstrap文档
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<title>bootstrap文档</title>
	<script type="text/javascript" src="js/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/bootstrap.min.js"></script>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
</head>
<body>
	<div></div>

	
</body>
</html>



07——bootstrap栅格系统
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<title>bootstrap文档</title>
	<script type="text/javascript" src="js/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/bootstrap.min.js"></script>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
	<style type="text/css">
		
		div[class*='col-']{
			height:50px;
			background-color:gold;
			border:1px solid #000;
		}
	
	</style>
</head>
<body>
	<div class="container">
		<div class="row">
		<h2>栅格系统</h2>
		</div>
	</div>

	<div class="container">		
		<div class="row">
			<div class="col-lg-3">col-lg-3</div>
			<div class="col-lg-4">col-lg-4</div>
			<div class="col-lg-2">col-lg-2</div>
			<div class="col-lg-3">col-lg-3</div>
		</div>
		<br>	
		<br>
		<div class="row">
			<div class="col-md-4">col-md-4</div>
			<div class="col-md-4">col-md-4</div>
			<div class="col-md-4">col-md-4</div>
		</div>
		<br>
		<br>
		<div class="row">
			<div class="col-sm-3">col-sm-3</div>
			<div class="col-sm-3">col-sm-3</div>
			<div class="col-sm-3">col-sm-3</div>
			<div class="col-sm-3">col-sm-3</div>
		</div>
		<br>
		<br>
		<div class="row">
			<div class="col-xs-5">col-xs-5</div>
			<div class="col-xs-3">col-xs-3</div>
			<div class="col-xs-2">col-xs-2</div>
			<div class="col-xs-2">col-xs-2</div>
		</div>
	</div>

	
</body>
</html>




08——栅格响应式布局
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<title>bootstrap文档</title>
	<script type="text/javascript" src="js/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/bootstrap.min.js"></script>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
	<style type="text/css">		
		/* div[class*='col-']{
			background-color:gold;
			border:1px solid #000;
		} */
		.box{
			height:200px;
			max-width:240px;
			background-color:cyan;
			border:1px solid #000;
			margin:20px auto;
		}	
	</style>
</head>
<body>
	<div class="container">
		<div class="row">
		<h2>栅格系统响应式</h2>
		</div>
	</div>

	<div class="container">		
		<div class="row">
			<div class="col-lg-3 col-md-3 col-sm-6"><div class="box"></div></div>
			<div class="col-lg-3 col-md-3 col-sm-6"><div class="box"></div></div>
			<div class="col-lg-3 col-md-3 col-sm-6"><div class="box"></div></div>
			<div class="col-lg-3 col-md-3 col-sm-6"><div class="box"></div></div>
		</div>		
	</div>

	
</body>
</html>





11——按钮
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<title>bootstrap文档</title>
	<script type="text/javascript" src="js/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/bootstrap.min.js"></script>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
</head>
<body>
	<div class="container">
		<div class="row">
		<h2>按钮</h2>
		</div>
	</div>

	<div class="container">
		<div class="row">
			<input type="button" name="" value="按钮" class="btn btn-primary">

			<a href="#" class="btn btn-success">a标签按钮</a>
			<a href="#" class="btn btn-info">a标签按钮</a>
			<a href="#" class="btn btn-warning">a标签按钮</a>
			<a href="#" class="btn btn-danger">a标签按钮</a>
			<a href="#" class="btn btn-link">a标签按钮</a>

			<a href="#" class="btn btn-danger active">a标签按钮</a>

			<a href="#" class="btn btn-danger disabled">a标签按钮</a>

		</div>
		<br>
		<br>
		<div class="row">
			<a href="#" class="btn btn-success btn-lg">大按钮</a>
			<a href="#" class="btn btn-info btn-md">中等按钮</a>
			<a href="#" class="btn btn-warning btn-xs">小按钮</a>
			<a href="#" class="btn btn-danger">一般的按钮</a>
		</div>

		<br>
		<br>
		<div class="row">
			<a href="#" class="btn btn-primary btn-block">宽度是100%的按钮</a>
		</div>

		<br>
		<br>
		<div class="row">
			<div class="btn-group">
				<a href="#" class="btn btn-primary">步骤一</a>
				<a href="#" class="btn btn-primary">步骤二</a>
				<a href="#" class="btn btn-default">步骤三</a>
			</div>
		</div>
		<br>
		<br>
		<div class="row">
			<div class="btn-group btn-group-justified">
				<a href="#" class="btn btn-primary">步骤一</a>
				<a href="#" class="btn btn-primary">步骤二</a>
				<a href="#" class="btn btn-default">步骤三</a>
			</div>
		</div>

		<br>
		<br>
		<div class="row">
			<div class="btn-group btn-group-justified">
				<div class="btn-group">
					<input type="button" name="" value="步骤一" class="btn btn-primary">
				</div>
				<div class="btn-group">
				<input type="button" name="" value="步骤二" class="btn btn-primary">
				</div>
				<div class="btn-group">
				<input type="button" name="" value="步骤三" class="btn btn-default">
				</div>
			</div>
		</div>


	</div>
</body>
</html>





01——表单
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
	<title>Document</title>
	<link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
	<script type="text/javascript" src="js/jquery-1.12.4.min.js"></script>
	<script type="text/javascript" src="js/bootstrap.min.js"></script>
	<style type="text/css">
		
		.glyphicon-heart{
			font-size:16px;
			color:gold;
		}

		.glyphicon-user{
			font-size:20px;
			color:pink;
		}

	</style>
</head>
<body>
	<div class="container">
		<div class="row">
			<h2>表单</h2>
		</div>
	</div>


	<div class="container">
		<div class="row">
			<form>
				<div class="form-group">
					<label for="input01"><span class="glyphicon glyphicon-user"></span></label>
					<input type="text" name="" class="form-control" id="input01">
				</div>

				<div class="form-group">
					<label for="pwd">密码:</label>
					<input type="password" name="" class="form-control" id="pwd">
				</div>
			</form>
			
			<br>
			<br>

			<form class="form-inline">
				<div class="form-group form-group-lg">
					<label for="input02">用户名:</label>
					<input type="text" name="" class="form-control" id="input02">
				</div>

				<div class="form-group">
					<label for="pwd02">密码:</label>
					<input type="password" name="" class="form-control" id="pwd02">
				</div>
			</form>


			<br>
			<br>

			<form class="form-horizontal">
				<div class="form-group form-group-lg">
					<label for="input03" class="col-xs-2">用户名:</label>
					<div class="col-xs-10">
					<input type="text" name="" class="form-control" id="input03">
					</div>
				</div>

				<div class="form-group form-group-sm">
					<label for="input03" class="col-xs-2">通信地址:</label>
					<div class="col-xs-10">
					<input type="text" name="" class="form-control" id="input03">
					</div>
				</div>

				<div class="form-group">
					<label for="pwd03"  class="col-xs-2">密码:</label>
					<div class="col-xs-10">
					<input type="password" name="" class="form-control" id="pwd03">
					</div>
				</div>


			</form>
			<br>
			<br>
			<br>
			<form>
				<div class="input-group">
				  <span class="input-group-addon">@</span>
				  <input type="text" class="form-control">				  
				</div>
				<br>
				<br>

				<div class="input-group">
				  
				  <input type="text" class="form-control">
				  <span class="input-group-btn">
				  	<!-- <input type="button" name="" value="搜索" class="btn btn-default"> -->

				  	<button class="btn btn-primary">搜索</button>
				  </span>				  
				</div>
				
				<br>
				<br>

				<div class="input-group">
				  
				  <input type="text" class="form-control">
				  <span class="input-group-btn">
				  	<!-- <input type="button" name="" value="搜索" class="btn btn-default"> -->

				  	<button class="btn btn-primary"><span class="glyphicon glyphicon-heart"></span></button>
				  </span>				  
				</div>

					<br>
				<br>
					<br>
				<br>
					<br>
				<br>
					<br>
				<br>
					<br>
				<br>

					<br>
				<br>

			</form>



		</div>
	</div>




</body>
</html>
