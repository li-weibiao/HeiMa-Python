1.不同类型变量之间的计算
  True对应的数字是1
  False对应的数字是0

2.字符串变量之间使用+拼接字符串
first_name = '三'
last_name = '张'
first_name + last_name
'三张'

3.字符串变量可以和整数使用*重复拼接相同的字符串
'*' *  3
'***'

4.数字型变量和字符串之间不能进行其他计算

5.变量的输入（用代码获取用户通过键盘输入的信息）

6.关于函数：一个提前准备好的功能（别人或者自己写的代码），可以直接使用
而不用关心内部的细节

7.input函数实现键盘输入
python中使用input函数等待用户输入，用户输入的任何内容，python都认为是一个字符串
字符串变量 = input("提示信息： ")

8.类型转换函数
int(),float()

【eg:计算苹果价格
#输入苹果的单价
price_str = input('苹果的单价：')

#输入苹果的重量
weight_str = input('苹果的重量：')

#转换变量类型,两个字符串变量之间是不能直接用乘法的
price = float(price_str)

weight = float(weight_str)

#计算支付的总金额
money = price * weight 

print('总共多少元：',money)
】

9.变量的格式化输出
苹果单价9.00元/斤,购买了5.00斤需要支付45.00元
·在 Python中可以使用 print函数将信息输出到控制台
·如果希望输出文字信息的同时,一起输出数据,就需要使用到格式化操作符
%被称为格式化操作符,专门用于处理字符串中的格式
。包含%的字符串,被称为格式化字符串
。%和不同的字符连用,不同类型的数据需要使用不同的格式化字符
格式化字符含义：
%s   字符串
%d   有符号十进制整数,%06d表示输出的整数显示位数,不足的地方使用补全
%f    浮点数%.2f表示小数点后只显示两位
%%  输出%
。语法格式如下:
 print("格式化字符串" % 变量1)
 print("格式化字符串"  % (变量1,变量2.....))

【eg: 格式化输出
#定义字符变量name ,输出我的名字叫小明，请多多关照！
name = '小明'
print('我的名字叫%s,请多多关照！' % name)

#定义整数变量student_no,输出我的学号是000001
student_no = 1
print('我的学号是 %06d' % student_no)   #%06d表示6位数,如果超过6位数，该是多少就是多少

#定义小数price,weight,money,输出苹果单价9.00元/斤，购买了5.00斤，需要支付45.00元
price = 9
weight = 5
money = 45

print('苹果单价%.2f元/斤，购买了%.2f斤，需要支付%.2f元' % (price,weight,money))   #%.2f表示显示小数点后两位

#定义一个小数scale,输出数据比例是10.00%
scale = 0.25 
print('数据比例是%.2f%%' % (scale * 100))    #如果不叫括号，* 100 则会将显示的字符串输出100遍
】

10.变量的命名
标识符可以由字母，下划线和数字组成
不能以数字开头
不能与关键字重名

11.关键字
关键字就是在python内部已经使用的标识符
关键字具有特殊的功能和含义
开发者不允许定义和关键字相同的名字的标识符
（import关键字可以导入一个工具包，在python中不同的工具包，提供有不同的工具）

12.变量的命名规则
命名规则可以被视为一种惯例，并无绝对与强制，目的是为了增加代码的识别和可读性
注意，python中的标识符是区分大小写的

在定义变量时，为了保证代码格式，=的左右因该各保留一个空格
在python中，如果变量名需要由二个或多个单词组成时，可以按照以下方式命名：
1）每个单词都使用小写字母
2）单词与单词之间使用_下划线连接
3）例如：first_name,last_name,qq_number,qq_password

13.驼峰命名法
·当变量名是由二个或多个单词组成时,还可以利用驼峰命名法来命名
·小驼峰式命名法
。第一个单词以小写字母开始,后续单词的首字母大写
例如: firstName、 lastName
大驼峰式命名法
每一个单词的首字母都采用大写字母
例如: FirstName、 LastName、 CameLCase


